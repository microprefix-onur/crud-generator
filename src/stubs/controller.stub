<?php

namespace {{namespace}};

use App\Http\Controllers\Controller;
use {{modelPath}}\{{model}};
use {{requestPath}}\{{model}}Request;
use Illuminate\Http\Request;

class {{model}}Controller extends Controller
{

    public function __construct()
    {
          $this->middleware(['auth:sanctum']);
    }

    @if (config('crud-generator.swagger_enabled'))
    /**
     * @OA\Get(
     *      path="/{{table}}",
     *      operationId="get{{model}}List",
     *      tags={"{{model}}"},
     *      summary="Get list of {{model}}",
     *      description="Returns list of {{model}}",
     *      security={{"bearerAuth":{}}},
     *      @OA\Parameter(
     *          name="limit",
     *          in="query",
     *          description="Number of items per page",
     *          required=false,
     *          @OA\Schema(
     *              type="integer",
     *              default=15
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/{{model}}")
     *          )
     *      )
     * )
     */
     @endif
    public function index(Request $request)
    {
        $query = {{model}}::query();

        if ($request->has('limit')) {
            $query->limit($request->input('limit'));
        }

        ${{modelVariablePlural}} = $query->paginate();

        return response()->json(${{modelVariablePlural}});
    }

    @if (config('crud-generator.swagger_enabled'))
    /**
     * @OA\Get(
     *      path="/{{table}}/{id}",
     *      operationId="get{{model}}ById",
     *      tags={"{{model}}"},
     *      summary="Get {{model}} by id",
     *      description="Returns {{model}} data",
     *      security={{"bearerAuth":{}}},
     *      @OA\Parameter(
     *          name="id",
     *          in="path",
     *          description="ID of {{model}} to return",
     *          required=true,
     *          @OA\Schema(
     *              type="integer"
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/{{model}}")
     *          )
     *      ),
     *      @OA\Response(
     *          response=404,
     *          description="{{model}} not found"
     *      )
     * )
     */
     @endif
    public function show({{model}} ${{modelVariable}})
    {
        return response()->json(${{modelVariable}});
    }

    @if (config('crud-generator.swagger_enabled'))
    /**
     * @OA\Post(
     *      path="/{{table}}",
     *      operationId="store{{model}}",
     *      tags={"{{model}}"},
     *      summary="Create new {{model}}",
     *      description="Returns {{model}} data",
     *      security={{"bearerAuth":{}}},
     *      @OA\RequestBody(
     *          required=true,
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/{{model}}")
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/{{model}}")
     *          )
     *      ),
     *      @OA\Response(
     *          response=422,
     *          description="Invalid input data",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(
     *                  @OA\Property(
     *                      property="errors",
     *                      type="object",
     *                      @OA\AdditionalProperties(
     *                          type="array",
     *                          @OA\Items(
     *                              type="string"
     *                          )
     *                      )
     *                  )
     *              )
     *          )
     *      )
     * )
     */
    @endif
    public function store({{model}}Request $request)
    {
        ${{modelVariable}} = {{model}}::create($request->all());

        return response()->json(${{modelVariable}}, 201);
    }

    @if (config('crud-generator.swagger_enabled'))
    /**
     * @OA\Put(
     *      path="/{{table}}/{id}",
     *      operationId="update{{model}}",
     *      tags={"{{model}}"},
     *      summary="Update existing {{model}}",
     *      description="Returns updated {{model}} data",
     *      security={{"bearerAuth":{}}},
     *      @OA\Parameter(
     *          name="id",
     *          in="path",
     *          description="ID of {{model}} to update",
     *          required=true,
     *          @OA\Schema(
     *              type="integer"
     *          )
     *      ),
     *      @OA\RequestBody(
     *          required=true,
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/{{model}}")
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(ref="#/components/schemas/{{model}}")
     *          )
     *      ),
     *      @OA\Response(
     *          response=404,
     *          description="{{model}} not found"
     *      ),
     *      @OA\Response(
     *          response=422,
     *          description="Invalid input data",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(
     *                  @OA\Property(
     *                      property="errors",
     *                      type="object",
     *                      @OA\AdditionalProperties(
     *                          type="array",
     *                          @OA\Items(
     *                              type="string"
     *                          )
     *                      )
     *                  )
     *              )
     *          )
     *      )
     * )
     */
    @endif
    public function update({{model}}Request $request, {{model}} ${{modelVariable}})
    {
        ${{modelVariable}}->update($request->all());

        return response()->json(${{modelVariable}});
    }

    @if (config('crud-generator.swagger_enabled'))
    /**
     * @OA\Delete(
     *      path="/{{table}}/{id}",
     *      operationId="delete{{model}}",
     *      tags={"{{model}}"},
     *      summary="Delete {{model}} by id",
     *      description="Deletes {{model}} and returns success message",
     *      security={{"bearerAuth":{}}},
     *      @OA\Parameter(
     *          name="id",
     *          in="path",
     *          description="ID of {{model}} to delete",
     *          required=true,
     *          @OA\Schema(
     *              type="integer"
     *          )
     *      ),
     *      @OA\Response(
     *          response=200,
     *          description="Successful operation",
     *          @OA\MediaType(
     *              mediaType="application/json",
     *              @OA\Schema(
     *                  type="object",
     *                  @OA\Property(
     *                      property="message",
     *                      type="string",
     *                      description="Success message"
     *                  )
     *              )
     *          )
     *      ),
     *      @OA\Response(
     *          response=404,
     *          description="{{model}} not found"
     *      )
     * )
     */
    @endif
    public function destroy({{model}} ${{modelVariable}})
    {
        ${{modelVariable}}->delete();

        return response()->noContent();
    }
}
